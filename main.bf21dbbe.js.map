{"version":3,"sources":["scripts/main.js"],"names":["employeeList","document","querySelector","sortList","list","convertSalaryToNumber","salaryString","Number","replace","children","sort","a","b","salaryA","dataset","salary","salaryB","forEach","item","appendChild","getEmployees","map","name","textContent","trim","position","age"],"mappings":";AAAA,aAiCA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EA7BA,IAAMA,EAAeC,SAASC,cAAc,MAE5C,SAASC,EAASC,GACPC,SAAAA,EAAsBC,GACtBC,OAAAA,OAAOD,EAAaE,QAAQ,QAAS,KAG1B,EAAIJ,EAAKK,UAC1BC,KAAK,SAACC,EAAGC,GACFC,IAAAA,EAAUR,EAAsBM,EAAEG,QAAQC,QAGzCC,OAFSX,EAAsBO,EAAEE,QAAQC,QAE/BF,IAGTI,QAAQ,SAAAC,GAAQd,OAAAA,EAAKe,YAAYD,KAG/C,SAASE,EAAahB,GACb,OAAA,EAAIA,EAAKK,UAAUY,IAAI,SAAAH,GAAS,MAAA,CACrCI,KAAMJ,EAAKK,YAAYC,OACvBC,SAAUP,EAAKJ,QAAQW,SACvBV,OAAQG,EAAKJ,QAAQC,OACrBW,IAAKR,EAAKJ,QAAQY,OAItBvB,EAASH,GAEToB,EAAapB","file":"main.bf21dbbe.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\n// write code here\n\nconst employeeList = document.querySelector('ul');\n\nfunction sortList(list) {\n  function convertSalaryToNumber(salaryString) {\n    return Number(salaryString.replace(/\\$|,/g, ''));\n  }\n\n  const sortedItems = [...list.children]\n    .sort((a, b) => {\n      const salaryA = convertSalaryToNumber(a.dataset.salary);\n      const salaryB = convertSalaryToNumber(b.dataset.salary);\n\n      return salaryB - salaryA;\n    });\n\n  sortedItems.forEach(item => list.appendChild(item));\n}\n\nfunction getEmployees(list) {\n  return [...list.children].map(item => ({\n    name: item.textContent.trim(),\n    position: item.dataset.position,\n    salary: item.dataset.salary,\n    age: item.dataset.age,\n  }));\n}\n\nsortList(employeeList);\n\ngetEmployees(employeeList);\n"]}